test/test_require.cpp:5: enter: Scenario: `REQUIRE` prevents any further testing
test/test_require.cpp:6: failed: expected false == true
test/test_require.cpp:7: failed: expected false == true
test/test_require.cpp:9: enter: given a section after failed `REQUIRE`
test/test_require.cpp:10: enter: then the section is not executed nor visible
test/test_require.cpp:11: failed: expected false == true
test/test_require.cpp:10: leave: then the section is not executed nor visible
test/test_require.cpp:9: leave: given a section after failed `REQUIRE`
test/test_require.cpp:5: leave: Scenario: `REQUIRE` prevents any further testing

test/test_require.cpp:17: enter: Scenario: `REQUIRE` statement in section allows further section to run
test/test_require.cpp:21: enter: given a first section before any failed `REQUIRE`
test/test_require.cpp:24: enter: then the section is executed, and the first failed `REQUIRE` is reported
test/test_require.cpp:25: failed: expected v < 123 (0x7b,'{')
    actual value: 123 (0x7b,'{')
test/test_require.cpp:24: leave: then the section is executed, and the first failed `REQUIRE` is reported
test/test_require.cpp:21: leave: given a first section before any failed `REQUIRE`
test/test_require.cpp:17: leave: Scenario: `REQUIRE` statement in section allows further section to run

test/test_require.cpp:17: enter: Scenario: `REQUIRE` statement in section allows further section to run
test/test_require.cpp:29: enter: given a second section after a section containing s failed require
test/test_require.cpp:32: enter: then the section is executed, and the first failed `REQUIRE` is reported
test/test_require.cpp:33: failed: expected v > 123 (0x7b,'{')
    actual value: 123 (0x7b,'{')
test/test_require.cpp:32: leave: then the section is executed, and the first failed `REQUIRE` is reported
test/test_require.cpp:29: leave: given a second section after a section containing s failed require
test/test_require.cpp:17: leave: Scenario: `REQUIRE` statement in section allows further section to run
